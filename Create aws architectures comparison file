# دراسة حالة: تطوير بنية تطبيق الموظفين على AWS

خلال الأسبوع الثاني من رحلتي في تعلم AWS، قمت ببناء تطبيق ويب للموظفين، لكن الأهم من ذلك هو التطور الفكري الذي مررت به حول كيفية بناء الحلول السحابية بكفاءة. هذه التدوينة توثق المقارنة بين بنيتين مختلفتين لنفس التطبيق.

---

## البنية الأولى: الحل التقليدي القائم على الخوادم (Server-Based)

في البداية، قمت ببناء التطبيق باستخدام بنية تحتية قوية وموثوقة تعتمد على الخوادم. كانت المكونات الرئيسية كالتالي:

- **الشبكة (VPC):** شبكة خاصة معزولة لضمان الأمان.
- **الحوسبة (EC2 Auto Scaling Group):** مجموعة من الخوادم الافتراضية التي تتوسع وتنكمش تلقائيًا مع حجم الاستخدام.
- **توزيع الأحمال (Application Load Balancer):** لتوزيع الطلبات على الخوادم المتاحة وضمان الأداء.
- **قاعدة البيانات (Amazon DynamoDB):** لتخزين بيانات الموظفين.
- **التخزين (Amazon S3):** لتخزين الملفات الثابتة مثل الصور والملفات.
- **المراقبة (Amazon CloudWatch):** لمراقبة أداء النظام وإطلاق إنذارات.

**النتيجة:** بنية قوية وقابلة للتطوير، لكنها تتطلب إدارة مستمرة للخوادم وتكاليف ثابتة حتى في حالة عدم وجود استخدام.

---

## البنية الثانية: الحل الحديث الخالي من الخوادم (Serverless)

بعد بناء الحل الأول، اطلعت على خدمات AWS المتقدمة التي غيرت مفهومي تمامًا عن كفاءة التكلفة والمرونة. يمكن إعادة بناء نفس التطبيق باستخدام بنية "سيرفرلس" بالكامل:

- **واجهة برمجة التطبيقات (Amazon API Gateway):** تعمل كبوابة أمامية تستقبل كل الطلبات بدلاً من الـ Load Balancer.
- **المنطق البرمجي (AWS Lambda):** بدلاً من الخوادم الدائمة (EC2)، يتم تنفيذ الكود البرمجي عند الطلب فقط عبر دوال لامدا. لا يوجد خادم لإدارته، والدفع يكون فقط عند تنفيذ الكود.
- **قاعدة البيانات والتخزين:** تبقى كما هي (DynamoDB و S3)، فهي خدمات مُدارة بطبيعتها.
- **توزيع المحتوى العالمي (Amazon CloudFront & Route 53):** لاستضافة الواجهة الأمامية للتطبيق على شبكة توصيل المحتوى (CDN)، مما يسرّع الوصول للمستخدمين حول العالم ويقلل الضغط على المصدر.

---

## الاستنتاج والدرس المستفاد

الدرس الأكبر هو أن "مهندس الحلول" لا يختار الأدوات التي يعرفها فقط، بل يختار الأدوات **الأفضل** للمهمة. البنية الثانية (Serverless) تقدم مرونة هائلة، وتكلفة تعتمد على الاستخدام الفعلي (Pay-as-you-go)، وتقلل من عبء الإدارة بشكل جذري.

هذا التحول في التفكير من "إدارة الخوادم" إلى "بناء الوظائف" هو جوهر الحوسبة السحابية الحديثة.
